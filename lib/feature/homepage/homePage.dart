import 'package:flutter/material.dart';
import 'package:kartal/kartal.dart';

import 'package:carbon_mail/feature/homepage/service/PostSevrice.dart';

import '../../products/text/HomePageText.dart';
import '../../products/color/Appcolors.dart';
import 'model/post.dart';

class HomePage extends StatefulWidget {
  HomePage({Key? key}) : super(key: key);

  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  final PostService _wikiService = PostService();
  Autogenerated? _wikiModel;
  bool isLoading = false;
  void changeLoading() {
    setState(() {
      isLoading = !isLoading;
    });
  }

  void init() async {
    _wikiModel = await _wikiService.fetchPost();
    changeLoading();
  }

  @override
  void initState() {
    init();
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Container(
        padding: EdgeInsets.all(8),
        constraints: const BoxConstraints.expand(),
        decoration: BoxDecoration(
            color: AppColors().dark_grey_blue,
            border: Border.all(color: Theme.of(context).colorScheme.secondary)),
        child: Column(
          children: [
            const Spacer(
              flex: 1,
            ),
            Expanded(
              flex: 2,
              // ignore: prefer_const_constructors
              child: Text(
                HomePagetext().keepUptitle,
                style: context.textTheme.headline3,
                textAlign: TextAlign.left,
              ),
            ),
            Expanded(
                child: Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Text(HomePagetext().subscrubionTitle,
                    style: context.textTheme.bodyLarge,
                    textAlign: TextAlign.left),
                Opacity(
                  opacity: 0.3,
                  child: Container(
                    padding: const EdgeInsets.all(10),
                    decoration:  BoxDecoration(
                      borderRadius: BorderRadius.all(Radius.circular(8)),
                      color: AppColors().white,
                    ),
                    child: Text(HomePagetext().cleandtitle,
                        style: context.textTheme.bodyLarge,
                        textAlign: TextAlign.center),
                  ),
                )
              ],
            )),
            Expanded(
              flex: 8,
              child: Container(child: _listViewBuilder()),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomNavigationBar(
        showSelectedLabels: false,
        showUnselectedLabels: false,
        items: <BottomNavigationBarItem>[
          BottomNavigationBarItem(
            icon: const Icon(Icons.folder),
            label: HomePagetext().folderIcon,
          ),
          BottomNavigationBarItem(
            icon: const Icon(Icons.settings),
            label: HomePagetext().settingsIcon,
          ),
          BottomNavigationBarItem(
            icon: const Icon(Icons.line_style),
            label: HomePagetext().lineIcon,
          ),
        ],
        //currentIndex: _selectedIndex,
        selectedItemColor: Colors.amber[800],
        // onTap: _onItemTapped,
      ),
    );
  }

  Widget _listViewBuilder() {
    return isLoading
        ? ListView.builder(
            itemCount: _wikiModel?.results?.length,
            itemBuilder: (BuildContext context, int index) {
              return Container(
                margin: context.paddingLow,
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(20),
                  color: AppColors().white,
                ),
                child: ListTile(
                  trailing: Padding(
                    padding: context.paddingLow,
                    child: ElevatedButton(
                      onPressed: () {},
                      child: const Icon(Icons.delete),
                      style: ButtonStyle(
                          backgroundColor: MaterialStateProperty.all(
                             AppColors().grey_blue),
                          foregroundColor:
                              MaterialStateProperty.all(AppColors().blue),
                          shape:
                              MaterialStateProperty.all<OutlinedBorder>(
                                  RoundedRectangleBorder(
                                      borderRadius: BorderRadius.circular(12.0),
                                      ))),
                    ),
                  ),
                  title: Text(
                    _wikiModel?.results?[index].title.toString() ?? '',
                    style: context.textTheme.bodyMedium,
                  ),
                  subtitle: Text(
                    _wikiModel?.results?[index].id.toString() ?? '',
                    style: context.textTheme.bodySmall,
                    overflow: TextOverflow.fade,
                    maxLines: 1,
                    softWrap: false,
                  ),
                ),
              );
            },
          )
        : const Center(child: CircularProgressIndicator());
  }
}
